---
import Layout from '../../layouts/Layout.astro';

// This page will be used to review translations from GitHub PRs
---

<Layout title="Translation Review - Admin">
  <div class="max-w-6xl mx-auto">
    <!-- Header -->
    <div class="mb-8">
      <div class="flex items-center justify-between">
        <div>
          <h1 class="text-3xl font-bold text-gray-900 dark:text-white">Translation Review</h1>
          <p class="mt-2 text-gray-600 dark:text-gray-400">
            Review and edit automatically translated content before publishing
          </p>
        </div>
        <div class="flex space-x-4">
          <a 
            href="/admin/translate" 
            class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
          >
            ‚Üê Back to Translation
          </a>
          <button 
            id="load-pr-translations"
            class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors"
          >
            üîÑ Load PR Translations
          </button>
        </div>
      </div>
    </div>

    <!-- Review Guidelines -->
    <div class="bg-blue-50 dark:bg-blue-900/20 rounded-lg p-6 mb-8">
      <h3 class="text-lg font-semibold text-blue-900 dark:text-blue-100 mb-4">
        üìã Review Guidelines
      </h3>
      <div class="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm text-blue-800 dark:text-blue-200">
        <div>
          <h4 class="font-medium mb-2">Translation Quality</h4>
          <ul class="space-y-1">
            <li>‚Ä¢ Check technical terminology accuracy</li>
            <li>‚Ä¢ Ensure natural language flow</li>
            <li>‚Ä¢ Verify cultural context appropriateness</li>
            <li>‚Ä¢ Confirm meaning preservation</li>
          </ul>
        </div>
        <div>
          <h4 class="font-medium mb-2">Technical Aspects</h4>
          <ul class="space-y-1">
            <li>‚Ä¢ Verify Markdown formatting is preserved</li>
            <li>‚Ä¢ Check code blocks and syntax highlighting</li>
            <li>‚Ä¢ Ensure links and references work correctly</li>
            <li>‚Ä¢ Validate frontmatter metadata</li>
          </ul>
        </div>
      </div>
    </div>

    <!-- Translation Review Interface -->
    <div id="review-interface" class="space-y-8">
      <!-- This will be populated with translation reviews -->
      <div class="text-center py-12 text-gray-500 dark:text-gray-400">
        <svg class="w-16 h-16 mx-auto mb-4 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
        </svg>
        <p class="text-lg">No translations to review</p>
        <p class="text-sm">Click "Load PR Translations" to check for pending reviews</p>
      </div>
    </div>

    <!-- Translation Editor Modal -->
    <div id="editor-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-6xl w-full max-h-[90vh] overflow-hidden">
          <div class="flex justify-between items-center p-6 border-b border-gray-200 dark:border-gray-700">
            <h3 id="editor-title" class="text-lg font-semibold text-gray-900 dark:text-white">Edit Translation</h3>
            <button id="close-editor" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          
          <div class="flex h-[70vh]">
            <!-- Original Content -->
            <div class="w-1/2 p-6 border-r border-gray-200 dark:border-gray-700 overflow-y-auto">
              <h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Original Content</h4>
              <div id="original-content" class="prose dark:prose-invert max-w-none text-sm">
                <!-- Original content will be loaded here -->
              </div>
            </div>
            
            <!-- Translation Editor -->
            <div class="w-1/2 p-6 overflow-y-auto">
              <h4 class="text-sm font-medium text-gray-700 dark:text-gray-300 mb-3">Translation</h4>
              <textarea 
                id="translation-editor"
                class="w-full h-full resize-none border border-gray-300 dark:border-gray-600 rounded-md p-3 bg-white dark:bg-gray-700 text-gray-900 dark:text-white font-mono text-sm"
                placeholder="Translation content will be loaded here..."
              ></textarea>
            </div>
          </div>
          
          <div class="flex justify-between items-center p-6 border-t border-gray-200 dark:border-gray-700">
            <div class="flex space-x-2">
              <button 
                id="preview-translation"
                class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
              >
                üëÅÔ∏è Preview
              </button>
              <button 
                id="check-quality"
                class="px-4 py-2 bg-yellow-600 text-white rounded-lg hover:bg-yellow-700 transition-colors"
              >
                üîç Quality Check
              </button>
            </div>
            <div class="flex space-x-2">
              <button 
                id="reject-translation"
                class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 transition-colors"
              >
                ‚ùå Reject
              </button>
              <button 
                id="approve-translation"
                class="px-4 py-2 bg-green-600 text-white rounded-lg hover:bg-green-700 transition-colors"
              >
                ‚úÖ Approve & Merge
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Quality Check Results Modal -->
    <div id="quality-modal" class="fixed inset-0 bg-black bg-opacity-50 hidden z-50">
      <div class="flex items-center justify-center min-h-screen p-4">
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-xl max-w-2xl w-full">
          <div class="flex justify-between items-center p-6 border-b border-gray-200 dark:border-gray-700">
            <h3 class="text-lg font-semibold text-gray-900 dark:text-white">Quality Check Results</h3>
            <button id="close-quality-modal" class="text-gray-400 hover:text-gray-600 dark:hover:text-gray-300">
              <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
              </svg>
            </button>
          </div>
          
          <div id="quality-results" class="p-6">
            <!-- Quality check results will be displayed here -->
          </div>
        </div>
      </div>
    </div>

    <!-- Status Messages -->
    <div id="status-messages" class="fixed bottom-4 right-4 space-y-2 z-50">
      <!-- Status messages will be inserted here -->
    </div>
  </div>

  <script>
    let currentPR = null;
    let currentTranslation = null;

    // Check GitHub authentication
    function checkAuth() {
      const githubToken = localStorage.getItem('github-token');
      const githubUser = localStorage.getItem('github-user');
      
      if (!githubToken || !githubUser) {
        window.location.href = '/admin';
        return false;
      }
      return true;
    }

    // Show status message
    function showStatus(message, type = 'info') {
      const statusContainer = document.getElementById('status-messages');
      const statusDiv = document.createElement('div');
      
      const bgColor = {
        success: 'bg-green-600',
        error: 'bg-red-600',
        warning: 'bg-yellow-600',
        info: 'bg-blue-600'
      }[type] || 'bg-blue-600';

      statusDiv.className = `${bgColor} text-white px-4 py-2 rounded-lg shadow-lg max-w-sm`;
      statusDiv.textContent = message;
      
      statusContainer.appendChild(statusDiv);
      
      setTimeout(() => {
        statusDiv.remove();
      }, 5000);
    }

    // Load translation PRs from GitHub
    async function loadTranslationPRs() {
      const githubToken = localStorage.getItem('github-token');
      
      if (!githubToken) {
        showStatus('Not authenticated', 'error');
        return;
      }

      try {
        showStatus('Loading translation PRs...', 'info');

        const response = await fetch('https://api.github.com/repos/redreamality/redreamality.github.io/pulls?state=open&head=translation/', {
          headers: {
            'Authorization': `token ${githubToken}`,
            'Accept': 'application/vnd.github.v3+json'
          }
        });

        if (!response.ok) {
          throw new Error(`GitHub API error: ${response.status}`);
        }

        const prs = await response.json();
        const translationPRs = prs.filter(pr => pr.head.ref.startsWith('translation/'));

        displayTranslationPRs(translationPRs);
        
        if (translationPRs.length === 0) {
          showStatus('No translation PRs found', 'info');
        } else {
          showStatus(`Found ${translationPRs.length} translation PR(s)`, 'success');
        }

      } catch (error) {
        console.error('Error loading PRs:', error);
        showStatus('Failed to load translation PRs', 'error');
      }
    }

    // Display translation PRs
    function displayTranslationPRs(prs) {
      const reviewInterface = document.getElementById('review-interface');
      
      if (prs.length === 0) {
        reviewInterface.innerHTML = `
          <div class="text-center py-12 text-gray-500 dark:text-gray-400">
            <svg class="w-16 h-16 mx-auto mb-4 opacity-50" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
            </svg>
            <p class="text-lg">No translations to review</p>
            <p class="text-sm">All translations have been reviewed or no translation PRs are open</p>
          </div>
        `;
        return;
      }

      reviewInterface.innerHTML = prs.map(pr => `
        <div class="bg-white dark:bg-gray-800 rounded-lg shadow-md p-6">
          <div class="flex items-start justify-between mb-4">
            <div>
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white">${pr.title}</h3>
              <p class="text-sm text-gray-600 dark:text-gray-400 mt-1">${pr.body || 'No description'}</p>
              <div class="flex items-center space-x-4 mt-2 text-xs text-gray-500 dark:text-gray-400">
                <span>PR #${pr.number}</span>
                <span>Branch: ${pr.head.ref}</span>
                <span>Created: ${new Date(pr.created_at).toLocaleDateString()}</span>
              </div>
            </div>
            <div class="flex space-x-2">
              <button 
                onclick="reviewTranslation(${pr.number}, '${pr.head.ref}')"
                class="px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700 transition-colors text-sm"
              >
                üìù Review
              </button>
              <a 
                href="${pr.html_url}" 
                target="_blank"
                class="px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors text-sm"
              >
                üîó View PR
              </a>
            </div>
          </div>
          
          <div class="border-t border-gray-200 dark:border-gray-700 pt-4">
            <div class="flex items-center justify-between text-sm">
              <div class="flex items-center space-x-4">
                <span class="flex items-center text-green-600 dark:text-green-400">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                  </svg>
                  +${pr.additions || 0}
                </span>
                <span class="flex items-center text-red-600 dark:text-red-400">
                  <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                  </svg>
                  -${pr.deletions || 0}
                </span>
                <span class="text-gray-600 dark:text-gray-400">
                  ${pr.changed_files || 0} file(s) changed
                </span>
              </div>
              <div class="flex items-center space-x-2">
                <span class="px-2 py-1 bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200 rounded-full text-xs">
                  Pending Review
                </span>
              </div>
            </div>
          </div>
        </div>
      `).join('');
    }

    // Review specific translation
    async function reviewTranslation(prNumber, branch) {
      currentPR = prNumber;
      showStatus('Loading translation details...', 'info');
      
      // For now, show a placeholder editor
      // In a full implementation, this would fetch the PR files and show them in the editor
      document.getElementById('editor-title').textContent = `Review Translation - PR #${prNumber}`;
      document.getElementById('original-content').innerHTML = '<p class="text-gray-500">Loading original content...</p>';
      document.getElementById('translation-editor').value = 'Loading translation...';
      document.getElementById('editor-modal').classList.remove('hidden');
      
      showStatus('Translation editor opened', 'success');
    }

    // Quality check function
    function performQualityCheck() {
      const translation = document.getElementById('translation-editor').value;
      
      const checks = [
        {
          name: 'Markdown Formatting',
          status: translation.includes('#') || translation.includes('**') ? 'pass' : 'warning',
          message: translation.includes('#') || translation.includes('**') ? 'Markdown formatting detected' : 'No markdown formatting found'
        },
        {
          name: 'Code Blocks',
          status: translation.includes('```') ? 'pass' : 'info',
          message: translation.includes('```') ? 'Code blocks preserved' : 'No code blocks found'
        },
        {
          name: 'Links',
          status: translation.includes('[') && translation.includes('](') ? 'pass' : 'info',
          message: translation.includes('[') && translation.includes('](') ? 'Links preserved' : 'No links found'
        },
        {
          name: 'Length Check',
          status: translation.length > 100 ? 'pass' : 'warning',
          message: `Translation length: ${translation.length} characters`
        }
      ];

      displayQualityResults(checks);
    }

    // Display quality check results
    function displayQualityResults(checks) {
      const resultsContainer = document.getElementById('quality-results');
      
      resultsContainer.innerHTML = `
        <div class="space-y-4">
          ${checks.map(check => `
            <div class="flex items-center justify-between p-3 rounded-lg ${
              check.status === 'pass' ? 'bg-green-50 dark:bg-green-900/20' :
              check.status === 'warning' ? 'bg-yellow-50 dark:bg-yellow-900/20' :
              'bg-blue-50 dark:bg-blue-900/20'
            }">
              <div class="flex items-center">
                <div class="w-6 h-6 rounded-full flex items-center justify-center mr-3 ${
                  check.status === 'pass' ? 'bg-green-600' :
                  check.status === 'warning' ? 'bg-yellow-600' :
                  'bg-blue-600'
                }">
                  <svg class="w-4 h-4 text-white" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    ${check.status === 'pass' ? 
                      '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>' :
                      '<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>'
                    }
                  </svg>
                </div>
                <div>
                  <div class="font-medium text-gray-900 dark:text-white">${check.name}</div>
                  <div class="text-sm text-gray-600 dark:text-gray-400">${check.message}</div>
                </div>
              </div>
            </div>
          `).join('')}
        </div>
      `;
      
      document.getElementById('quality-modal').classList.remove('hidden');
    }

    // Event listeners
    document.getElementById('load-pr-translations').addEventListener('click', loadTranslationPRs);
    document.getElementById('close-editor').addEventListener('click', () => {
      document.getElementById('editor-modal').classList.add('hidden');
    });
    document.getElementById('close-quality-modal').addEventListener('click', () => {
      document.getElementById('quality-modal').classList.add('hidden');
    });
    document.getElementById('check-quality').addEventListener('click', performQualityCheck);
    
    document.getElementById('approve-translation').addEventListener('click', () => {
      if (currentPR) {
        showStatus(`Approving PR #${currentPR}...`, 'info');
        // In a full implementation, this would merge the PR
        showStatus('Translation approved and merged!', 'success');
        document.getElementById('editor-modal').classList.add('hidden');
      }
    });

    document.getElementById('reject-translation').addEventListener('click', () => {
      if (currentPR) {
        showStatus(`Rejecting PR #${currentPR}...`, 'warning');
        // In a full implementation, this would close the PR with comments
        showStatus('Translation rejected', 'warning');
        document.getElementById('editor-modal').classList.add('hidden');
      }
    });

    // Make reviewTranslation available globally
    window.reviewTranslation = reviewTranslation;

    // Check authentication on page load
    if (!checkAuth()) {
      // Will redirect to admin page
    }
  </script>
</Layout>
